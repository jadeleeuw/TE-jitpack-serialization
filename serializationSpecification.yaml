openapi: 3.0.0

info:
  title: Serialization API
  description: All endpoints related to the serialization assignment.
  version: 1.0

servers:
- url: http://localhost:8080/serialization
  description: Main server

paths:

  ##### ASSIGNMENT A #####
  /a/1:
    post:
      summary: verify assignment A1
      description: Verifies assignment A1.
      operationId: verifyA1
      requestBody:
        description: The array of PSU identifiers. 
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                type: string
              example: ["pc450", "ps650"]
      tags:
      - ASSIGNMENT_A
      responses:
        '200':
          description: The correctness of the submitted solution.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubmissionResult'
        '400':
          description: The submitted JSON could not be parsed correctly.
  /a/2:
    post:
      summary: verify assignment A2
      description: Verifies assignment A2.
      operationId: verifyA2
      requestBody:
        description: The GPU object. 
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GPU'
      tags:
      - ASSIGNMENT_A
      responses:
        '200':
          description: The correctness of the submitted solution.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubmissionResult'
        '400':
          description: The submitted JSON could not be parsed correctly.

  /a/3:
    post:
      summary: verify assignment A3
      description: Verifies assignment A3.
      operationId: verifyA3
      requestBody:
        description: The array of PC parts. 
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                anyOf:
                  - $ref: '#/components/schemas/Case'
                  - $ref: '#/components/schemas/Cooling'
                  - $ref: '#/components/schemas/CPU'
                  - $ref: '#/components/schemas/GPU'
                  - $ref: '#/components/schemas/PSU'
                  - $ref: '#/components/schemas/Storage'
      tags:
      - ASSIGNMENT_A
      responses:
        '200':
          description: The correctness of the submitted solution.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubmissionResult'
        '400':
          description: The submitted JSON could not be parsed correctly.

  ##### ASSIGNMENT B #####
  /b:
    post:
      summary: verify assignment B
      description: Verifies the shipment based on the shipment request for assignment B.
      operationId: verifyB
      requestBody:
        description: The shipment based on the given shipment request. 
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Shipment'
      tags:
      - ASSIGNMENT_B
      responses:
        '200':
          description: The correctness of the submitted solution.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubmissionResult'
        '400':
          description: The submitted JSON could not be parsed correctly.
    
    get:
      summary: Get shipment request
      description: Gets the shipment request that needs to be handled for assignment B.
      operationId: getShipmentRequest
      tags:
      - ASSIGNMENT_B
      responses:
        '200':
          description: The shipment request that needs to be handled for assignment B.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShipmentRequest'

  /customer/{customerId}:
    get: 
      summary: Get customer
      description: Gets all the information about the customer with the specified ID.
      operationId: getCustomer
      parameters:
      - in: path
        name: customerId
        description: The id of the customer.
        required: true
        schema:
          type: string
      tags:
      - ASSIGNMENT_B
      responses:
        '200':
          description: All information about the customer.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Customer'
        '400':
          description: The customer with the specified ID could not be found.

  ##### ASSIGNMENT C #####
  /c:
    post:
      summary: verify assignment C
      description: Verifies the administration order based on the webshop order for assignment C.
      operationId: verifyC
      requestBody:
        description: The administration order based on the given webshop order. 
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AdministrationOrder'
      tags:
      - ASSIGNMENT_C
      responses:
        '200':
          description: The correctness of the submitted solution.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubmissionResult'
        '400':
          description: The submitted JSON could not be parsed correctly.
    
    get:
      summary: Get webshop order
      description: Gets the webshop order that needs to be processed for assignment C.
      operationId: getWebshopOrder
      tags:
      - ASSIGNMENT_C
      responses:
        '200':
          description: The webshop order that needs to be processed for assignment C.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebshopOrder'

components:
  securitySchemes:
    idKey:
      type: apiKey
      in: header
      name: x-id-key

  responses:
    UnauthorizedError:
      description: Missing identification key.
      headers:
        WWW_Authenticate:
          schema:
            type: string

  schemas:
    SubmissionResult:
      type: string
      enum:
        - CORRECT
        - INCORRECT

    Case:
      type: object
      properties:
        price:
          type: number
          format: double
        name:
          type: string
        productId:
          type: string
        category:
          type: string
        volume:
          type: number
          format: double
      required:
        - price
        - name
        - productId
        - category
        - volume
      example:
        price: 68.90
        name: "Large case"
        productId: "cL"
        category: "CASE"
        volume: 57.75

    Cooling:
      type: object
      properties:
        price:
          type: number
          format: double
        name:
          type: string
        productId:
          type: string
        category:
          type: string
        performance:
          type: integer
      required:
        - price
        - name
        - productId
        - category
        - volume
      example:
        price: 20
        name: "Air cooled"
        productId: "cA"
        category: "COOLING"
        performance: 1

    CPU:
      type: object
      properties:
        price:
          type: number
          format: double
        name:
          type: string
        productId:
          type: string
        category:
          type: string
        brand:
          type: string
        performance:
          type: integer
      required:
        - price
        - name
        - productId
        - category
        - brand
        - performance
      example:
        price: 90
        name: "Ryzen 2200"
        productId: "cr2200"
        category: "CPU"
        brand: "AMD"
        performance: 4

    GPU:
      type: object
      properties:
        price:
          type: number
          format: double
        name:
          type: string
        productId:
          type: string
        category:
          type: string
        brand:
          type: string
        performance:
          type: integer
      required:
        - price
        - name
        - productId
        - category
        - brand
        - performance
      example:
        price: 165
        name: "GTX 1050Ti"
        productId: "gg1050ti"
        category: "GPU"
        brand: "Nvidia"
        performance: 3

    PSU:
      type: object
      properties:
        price:
          type: number
          format: double
        name:
          type: string
        productId:
          type: string
        category:
          type: string
        wattage:
          type: integer
      required:
        - price
        - name
        - productId
        - category
        - wattage
      example:
        price: 36.99
        name: "Corsair 450W"
        productId: "pc450"
        category: "PSU"
        wattage: 450

    Storage:
      type: object
      properties:
        price:
          type: number
          format: double
        name:
          type: string
        productId:
          type: string
        category:
          type: string
        capacity:
          type: integer
        speed:
          type: integer
      required:
        - price
        - name
        - productId
        - category
        - capacity
        - speed
      example:
        price: 40
        name: "Seagate 1Tb HDD"
        productId: "ss1000hdd"
        category: "STORAGE"
        capacity: 1000
        speed: 95
    
    PC:
      type: object
      properties:
        caze:
          $ref: '#/components/schemas/Case'
        cooling:
          $ref: '#/components/schemas/Cooling'
        cpu:
          $ref: '#/components/schemas/CPU'
        gpu:
          $ref: '#/components/schemas/GPU'
        psu:
          $ref: '#/components/schemas/PSU'
        storage:
          type: array
          items:
            $ref: '#/components/schemas/Storage'
      required:
        - caze
        - cooling
        - cpu
        - gpu
        - psu
        - storage

    Customer:
      type: object
      properties:
        name:
          type: string
        address:
          type: string
        email:
          type: string
        id:
          type: string
      required:
        - name
        - address
        - email
        - id

    CustomerOrder:
      type: object
      properties:
        customer:
          $ref: '#/components/schemas/Customer'
        pcs:
          type: array
          items:
            $ref: '#/components/schemas/PC'
      required:
        - customer
        - pcs

    Shipment:
      type: object
      properties:
        orders:
          type: array
          items:
            $ref: '#/components/schemas/CustomerOrder'
      required:
        - orders

    PCOrder:
      type: object
      properties:
        partIds:
          type: array
          items:
            type: string
      required:
        - partIds

    CustomerOrderRequest:
      type: object
      properties:
        customerId:
          type: string
        pcs:
          type: array
          items:
            $ref: '#/components/schemas/PCOrder'
      required:
        - customerId
        - pcs

    ShipmentRequest:
      type: object
      properties:
        orderRequests:
          type: array
          items:
            $ref: '#/components/schemas/CustomerOrderRequest'
      required:
        - orderRequests

    Sale:
      type: object
      properties:
        customerId:
          type: string
        productId:
          type: string
        totalPrice:
          type: number
          format: double
        quantity:
          type: integer
      required:
        - customerId
        - productId
        - totalPrice
        - quantity

    AdministrationOrder:
      type: object
      properties:
        sales:
          type: array
          items:
            $ref: '#/components/schemas/Sale'
      required:
        - sales

    WebshopOrder:
      type: object
      properties:
        customer:
          $ref: '#/components/schemas/Customer'
        pcParts:
          type: array
          items:
            anyOf:
                  - $ref: '#/components/schemas/Case'
                  - $ref: '#/components/schemas/Cooling'
                  - $ref: '#/components/schemas/CPU'
                  - $ref: '#/components/schemas/GPU'
                  - $ref: '#/components/schemas/PSU'
                  - $ref: '#/components/schemas/Storage'

security:
- idKey: []

tags:
- name: ASSIGNMENT_A
- name: ASSIGNMENT_B
- name: ASSIGNMENT_C